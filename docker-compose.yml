version: "3.9"

services:
  resource_catalog:
    build: ./resource_catalog
    container_name: resource_catalog
    ports:
      - "8080:9090"
    volumes:
      - ./resource_catalog/catalog.json:/app/catalog.json
      - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
    restart: unless-stopped

  database_adaptor:
    build: ./database
    container_name: database_adaptor
    depends_on:
      - resource_catalog
    ports:
      - "8081:8081"
    volumes:
      - ./database/infraction_database.db:/app/infraction_database.db
      - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
      - ./database/database_adaptor_info.json:/app/database_adaptor_info.json:ro
    restart: unless-stopped

  led_manager:
    build:
      context: ./LedManager
      dockerfile: Dockerfile.ledmanager
    container_name: led_manager
    depends_on:
      - resource_catalog
      - database_adaptor
    volumes:
      - ./LedManager/led_manager_info.json:/app/led_manager_info.json:ro
      - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
    restart: unless-stopped

  telegram_bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    container_name: telegram_bot
    volumes:
      - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
      - ./telegram_bot/telegram_bot_info.json:/app/telegram_bot_info.json:ro
      - ./telegram_bot/Plates_dataset:/app/Plates_dataset
      - ./telegram_bot/charts:/app/charts
    restart: unless-stopped

  thingspeak_adaptor:
    build:
      context: ./Sensors
      dockerfile: Dockerfile.thingspeak
    container_name: ThingSpeak_Adaptor
    depends_on:
      - resource_catalog
    volumes:
      - ./Sensors/ThingSpeak_Adaptor_info.json:/app/ThingSpeak_Adaptor_info.json:ro
    restart: unless-stopped

  violation_detection:
    build: ./violation_detection
    container_name: violation_detection
    depends_on:
      - resource_catalog
      - database_adaptor
    volumes:
      - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
      - ./violation_detection/violation_detection_info.json:/app/violation_detection_info.json:ro
    restart: unless-stopped
    command: ["python", "violation_detection.py"]

  # emergency_simulator:
  #   build:
  #     context: ./LedManager
  #     dockerfile: Dockerfile.emergencysim
  #   container_name: emergency_simulator
  #   depends_on:
  #     - resource_catalog
  #   stdin_open: true     # for input()
  #   tty: true            # interactive terminal
  #   volumes:
  #     - ./LedManager/emergency_sim_info.json:/app/emergency_sim_info.json:ro
  #     - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
  #   restart: unless-stopped

  thingspeak_adaptor:
    build:
      context: ./Sensors
      dockerfile: Dockerfile.thingspeak
    container_name: thingspeak_adaptor
    depends_on:
      - resource_catalog
    volumes:
      - ./shared/resource_catalog_info.json:/app/resource_catalog_info.json:ro
    restart: unless-stopped
